variables:
  specfile: redhawk-adminservice.spec

#Global before script, determine if this is a tag and handle rpm release field accordingly
before_script:
    - safe_ref=$(echo ${CI_COMMIT_REF_NAME} | tr -d /| tr '[:upper:]' '[:lower:]')
    - if [ -z "$CI_COMMIT_TAG" ]; then
        rpm_release="0.$CI_PIPELINE_ID}";
      else
        rpm_release="`rpm --query --queryformat "%{release}\n" --specfile ${namespace}$CI_PROJECT_NAME.spec | head -n 1 | awk -F"." "{print $1}"`";
      fi

.package: &package
  image: ${docker_registry}${docker_rpm_repository}docker:latest-rpm
  stage: build
  tags:
    - docker
  script:
    - printf "FROM ${docker_registry}${rpmbuild_repository}rpmbuild:$dist-$arch-onbuild" > Dockerfile
    - name=$(echo $CI_PROJECT_NAME| tr '[:upper:]' '[:lower:]')
    - docker build --pull
                   --tag=$name:$safe_ref-$dist-$arch
                   --build-arg "project=$CI_PROJECT_NAME"
                   --build-arg "rpm_release=$rpm_release"
                   --build-arg "spec_file=$specfile"
                   --build-arg "arch=$arch" .
    - id=$(docker create $name:$safe_ref-$dist-$arch)
    - docker cp $id:/root/rpmbuild/RPMS/ output/
    - docker rm -f $id || true
  artifacts:
    paths:
      - output/*/*.rpm
    expire_in: 2 days
  except:
    - master
    - /^(\d+\.)?(\d+)?(\.\d+)$/

package-el6-i386:
  variables:
    dist: el6
    arch: i686
  <<: *package

package-el6:
  variables:
    dist: el6
    arch: x86_64
  <<: *package

package-el7:
  variables:
    dist: el7
    arch: x86_64
  <<: *package

deploy:
  image: centos:7
  stage: deploy
  dependencies: []
  before_script:
    - echo "Deploying to $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
  script:
    - if [ -n "$jenkins_url" ]; then
        curl --insecure -X POST $jenkins_url/job/$CI_PROJECT_NAMESPACE/job/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME/buildWithParameters?pipeline_id=$CI_PIPELINE_ID --user $jenkins_user:$jenkins_api_token;
      fi
  except:
    - master
    - /^(\d+\.)?(\d+)?(\.\d+)$/
